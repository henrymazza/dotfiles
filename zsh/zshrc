# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="sorin"
HISTDUP=erase
HISTSIZE=10000000
SAVEHIST=10000000
setopt    appendhistory     #Append history to the history file (no overwriting)
setopt    sharehistory      #Share history across terminals
setopt    incappendhistory  #Immediately append to the history file,
                            #not just when a term is killed

# setopt BANG_HIST                 # Treat the '!' character specially during expansion.
# setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
# setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
# setopt SHARE_HISTORY             # Share history between all sessions.
# setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
# setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
# setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
# setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
# setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
# setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
# setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
# setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
# setopt HIST_BEEP                 # Beep when accessing nonexistent history.

function git_prompt_info() {}
function git_prompt_status() {}
function compdef() {}
source ~/.git-prompt.sh

setopt promptsubst

alias digg="dig +nocmd any +multiline +noall +answer"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how many often would you like to wait before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)

source ~/.async.zsh
autoload -Uz async && async
async_init

# Initialize a new worker (with notify option)
async_start_worker my_worker -n

VAR=0

if [[ $TERM_PROGRAM == "iTerm.app" ]]; then
    plugins=(autojump)
    plugins_defered=(bundler ruby gem git osx)
    # Create a callback function to process results
    function completed_callback() {
        if [ $VAR -eq 0 ]; then
            source $ZSH/oh-my-zsh.sh
            VAR=$((VAR+1))
            async_job my_worker sleep 0.1
        elif [ $VAR -ge 1 ]; then
            plugin=$plugins_defered[$VAR]
            if [ ! -z "$plugin" ]; then
                source $ZSH/plugins/$plugin/$plugin.plugin.zsh
                VAR=$((VAR+1))
                async_job my_worker sleep 0.1
            else
                export PATH="./bin:~/bin:$PATH"
            fi
        fi
    }

    source $ZSH/lib/history.zsh
    source $ZSH/lib/theme-and-appearance.zsh
    source $ZSH/themes/$ZSH_THEME.zsh-theme

    # Register callback function for the workers completed jobs
    async_register_callback my_worker completed_callback

    # Give the worker some tasks to perform
    # async_job my_worker
    async_job my_worker sleep 0.1
else
    if [ -n "$INSIDE_EMACS" ]; then
      plugins=(autojump git osx gem ruby rbenv bundler)
      source $ZSH/oh-my-zsh.sh
    fi

    # omz version isn't loading the path
    #export PATH="~/.rbenv/shims:$PATH"
    #export PATH="$HOME/.rbenv/bin:$PATH"
    #eval "$(rbenv init -)"
fi

# Customize to your needs...
export PATH=~/bin:/usr/local/sbin:/usr/local/share/npm/bin:/usr/local/bin
export PATH=$PATH:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin

# Postgres bins
export PATH="/usr/local/opt/postgresql@9.5/bin:$PATH"

setopt extendedglob

# down with autocorrect
unsetopt correct_all

# The Editors!
export GIT_EDITOR="emacsclient -t -a=\\\"\\\""
export EDITOR='em'
export ALTERNATE_EDITOR="em"

#lazy load autojump
function j() {
    (( $+commands[brew] )) && {
        local pfx=$(brew --prefix)
        [[ -f "$pfx/etc/autojump.sh" ]] && . "$pfx/etc/autojump.sh"
        j "$@"
    }
}


[[ $TERM_PROGRAM == "iTerm.app" ]] && test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

export RAILS_VERSION=5.0

# coreutils
export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"

# gnu-sed
export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"

export PATH="$HOME/.rbenv/bin:$PATH"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm

# Homebrew paths for mysql@5.7
# Warning: installing latest 'mysql' formula will unlink these
export PATH="/usr/local/opt/mysql@5.7/bin:$PATH"
export LDFLAGS="-L/usr/local/opt/mysql@5.7/lib"
export CPPFLAGS="-I/usr/local/opt/mysql@5.7/include"
export PKG_CONFIG_PATH="/usr/local/opt/mysql@5.7/lib/pkgconfig"
# ... and to build mysql2:
export LIBRARY_PATH=$LIBRARY_PATH:/usr/local/opt/openssl/lib/

export PATH="./node_modules/.bin:$PATH"
export PATH=~/.local/bin:$PATH
export PATH="./bin:~/bin:$PATH"
export PATH="$PATH:/Applications/Emacs 27.app/Contents/MacOS/bin"

export TERM=xterm-256color

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/HMz/Documents/bin/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/HMz/Documents/bin/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/HMz/Documents/bin/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/HMz/Documents/bin/google-cloud-sdk/completion.zsh.inc'; fi

export PATH="/usr/local/opt/node@10/bin:$PATH"
export PATH="$PYENV_ROOT/bin:$PATH"

# pyenv config
export PYENV_ROOT="$HOME/.pyenv/shims"
export PATH="$PYENV_ROOT:$PATH"
export PIPENV_PYTHON="$PYENV_ROOT/python"
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"

# Kubernetes auto completion
source <(kubectl completion zsh)

function preexec {
    tabset $1 && print "\e[1F\e[0J"
}

function precmd {
    print "\u001b[30m" && tabset `basename "$PWD"` && print "\e[1F\e[0J\e[0J\u001b[0m\e[1F"
}
